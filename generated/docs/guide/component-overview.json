{"id":"guide/component-overview","title":"Angular Components Overview","contents":"\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/aio/aio/content/guide/component-overview.md?message=docs%3A%20请简述你的修改...\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"angular-components-overview\" translation-result=\"on\">Angular Components 概述<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#angular-components-overview\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\" id=\"angular-components-overview\">Angular Components Overview<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#angular-components-overview\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">组件是 Angular 应用的主要构造块。每个组件包括如下部分：</p><p translation-origin=\"off\">Components are the main building block for Angular applications. Each component consists of:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">一个 HTML 模板，用于声明页面要渲染的内容</p><p translation-origin=\"off\">An HTML template that declares what renders on the page</p>\n\n</li>\n<li>\n<p translation-result=\"on\">一个用于定义行为的 Typescript 类</p><p translation-origin=\"off\">A Typescript class that defines behavior</p>\n\n</li>\n<li>\n<p translation-result=\"on\">一个 CSS 选择器，用于定义组件在模板中的使用方式</p><p translation-origin=\"off\">A CSS selector that defines how the component is used in a template</p>\n\n</li>\n<li>\n<p translation-result=\"on\">（可选）要应用在模板上的 CSS 样式</p><p translation-origin=\"off\">Optionally, CSS styles applied to the template</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">本主题描述如何创建和配置 Angular 组件。</p><p translation-origin=\"off\">This topic describes how to create and configure an Angular component.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">要查看或下载本主题中使用的范例代码，请参阅 <live-example></live-example>。</p><p translation-origin=\"off\">To view or download the example code used in this topic, see the <live-example></live-example>.</p>\n\n</div>\n<h2 id=\"prerequisites\" translation-result=\"on\">先决条件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#prerequisites\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"prerequisites\">Prerequisites<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#prerequisites\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">要创建一个组件，请先验证你是否满足以下先决条件：</p><p translation-origin=\"off\">To create a component, verify that you have met the following prerequisites:</p>\n\n<ol>\n<li>\n<p translation-result=\"on\"><a href=\"guide/setup-local#install-the-angular-cli\">安装 Angular CLI</a>。</p><p translation-origin=\"off\"><a href=\"guide/setup-local#install-the-angular-cli\">Install the Angular CLI.</a></p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/setup-local#create-a-workspace-and-initial-application\">创建一个带有初始项目的 Angular 工作区</a>。如果还没有项目，你可以用 <code>ng new &#x3C;project-name></code> 创建一个，其中 <code>&#x3C;project-name></code> 是你的 Angular 应用的名字。</p><p translation-origin=\"off\"><a href=\"guide/setup-local#create-a-workspace-and-initial-application\">Create an Angular workspace</a> with initial application.\nIf you don't have a project, you can create one using <code>ng new &#x3C;project-name></code>, where <code>&#x3C;project-name></code> is the name of your Angular application.</p>\n\n</li>\n</ol>\n<h2 id=\"creating-a-component\" translation-result=\"on\">创建一个组件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#creating-a-component\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"creating-a-component\">Creating a component<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#creating-a-component\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">Angular CLI 是用来创建组件的最简途径。你也可以手动创建一个组件。</p><p translation-origin=\"off\">The easiest way to create a component is with the Angular CLI. You can also create a component manually.</p>\n\n<h3 id=\"creating-a-component-using-the-angular-cli\" translation-result=\"on\">使用 Angular CLI 创建组件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#creating-a-component-using-the-angular-cli\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"creating-a-component-using-the-angular-cli\">Creating a component using the Angular CLI<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#creating-a-component-using-the-angular-cli\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">使用 Angular CLI 创建一个组件：</p><p translation-origin=\"off\">To create a component using the Angular CLI:</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">在终端窗口中，导航到要放置你应用的目录。</p><p translation-origin=\"off\">From a terminal window, navigate to the directory containing your application.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">运行 <code>ng generate component &#x3C;component-name></code> 命令，其中 <code>&#x3C;component-name></code> 是新组件的名字。</p><p translation-origin=\"off\">Run the <code>ng generate component &#x3C;component-name></code> command, where <code>&#x3C;component-name></code> is the name of your new component.</p>\n\n</li>\n</ol>\n<p translation-result=\"on\">默认情况下，该命令会创建以下内容：</p><p translation-origin=\"off\">By default, this command creates the following:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">一个以该组件命名的文件夹</p><p translation-origin=\"off\">A folder named after the component</p>\n\n</li>\n<li>\n<p translation-result=\"on\">一个组件文件 <code>&#x3C;component-name>.component.ts</code></p><p translation-origin=\"off\">A component file, <code>&#x3C;component-name>.component.ts</code></p>\n\n</li>\n<li>\n<p translation-result=\"on\">一个模板文件 <code>&#x3C;component-name>.component.html</code></p><p translation-origin=\"off\">A template file, <code>&#x3C;component-name>.component.html</code></p>\n\n</li>\n<li>\n<p translation-result=\"on\">一个 CSS 文件， <code>&#x3C;component-name>.component.css</code></p><p translation-origin=\"off\">A CSS file, <code>&#x3C;component-name>.component.css</code></p>\n\n</li>\n<li>\n<p translation-result=\"on\">测试文件 <code>&#x3C;component-name>.component.spec.ts</code></p><p translation-origin=\"off\">A testing specification file, <code>&#x3C;component-name>.component.spec.ts</code></p>\n\n</li>\n</ul>\n<p translation-result=\"on\">其中 <code>&#x3C;component-name></code> 是组件的名称。</p><p translation-origin=\"off\">Where <code>&#x3C;component-name></code> is the name of your component.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">你可以更改 <code>ng generate component</code> 创建新组件的方式。欲知详情，请参阅 Angular CLI 文档中的 <a href=\"cli/generate#component-command\">ng generate component</a>。</p><p translation-origin=\"off\">You can change how <code>ng generate component</code> creates new components.\nFor more information, see <a href=\"cli/generate#component-command\">ng generate component</a> in the Angular CLI documentation.</p>\n\n</div>\n<h3 id=\"creating-a-component-manually\" translation-result=\"on\">手动创建组件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#creating-a-component-manually\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"creating-a-component-manually\">Creating a component manually<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#creating-a-component-manually\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">虽然 Angular CLI 是创建 Angular 组件的最简途径，但你也可以手动创建一个组件。本节将介绍如何在现有的 Angular 项目中创建核心组件文件。</p><p translation-origin=\"off\">Although the Angular CLI is the easiest way to create an Angular component, you can also create a component manually.\nThis section describes how to create the core component file within an existing Angular project.</p>\n\n<p translation-result=\"on\">要手动创建一个新组件：</p><p translation-origin=\"off\">To create a new component manually:</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">导航到你的 Angular 项目目录。</p><p translation-origin=\"off\">Navigate to your Angular project directory.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">创建一个新文件 <code>&#x3C;component-name>.component.ts</code> 。</p><p translation-origin=\"off\">Create a new file, <code>&#x3C;component-name>.component.ts</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">在文件的顶部，添加下面的 import 语句。</p><p translation-origin=\"off\">At the top of the file, add the following import statement.</p>\n\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"import\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a> } from '@angular/core';\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">在 <code>import</code> 语句之后，添加一个 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 装饰器。</p><p translation-origin=\"off\">After the <code>import</code> statement, add a <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> decorator.</p>\n\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"decorator-skeleton\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n})\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">为组件选择一个 CSS 选择器。</p><p translation-origin=\"off\">Choose a CSS selector for the component.</p>\n\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"selector\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n})\n\n</code-example>\n<p translation-result=\"on\">关于选择选择器的更多信息，参阅<a href=\"guide/component-overview#specifying-a-components-css-selector\">指定组件的选择器</a>。</p><p translation-origin=\"off\">For more information on choosing a selector, see <a href=\"guide/component-overview#specifying-a-components-css-selector\">Specifying a component's selector</a>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">定义组件用以显示信息的 HTML 模板。在大多数情况下，这个模板是一个单独的 HTML 文件。</p><p translation-origin=\"off\">Define the HTML template that the component uses to display information.\nIn most cases, this template is a separate HTML file.</p>\n\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"templateUrl\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  templateUrl: './component-overview.component.html',\n})\n\n</code-example>\n<p translation-result=\"on\">关于定义组件模板的更多信息，请参阅<a href=\"guide/component-overview#defining-a-components-template\">定义组件的模板</a>。</p><p translation-origin=\"off\">For more information on defining a component's template, see <a href=\"guide/component-overview#defining-a-components-template\">Defining a component's template</a>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">为组件的模板选择样式。在大多数情况下，你可以在单独的文件中定义组件模板的样式。</p><p translation-origin=\"off\">Select the styles for the component's template.\nIn most cases, you define the styles for your component's template in a separate file.</p>\n\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"decorator\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  templateUrl: './component-overview.component.html',\n  styleUrls: ['./component-overview.component.css']\n})\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">添加一个包含该组件代码 <code>class</code> 语句。</p><p translation-origin=\"off\">Add a <code>class</code> statement that includes the code for the component.</p>\n\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"class\">\nexport class ComponentOverviewComponent {\n\n}\n\n</code-example>\n</li>\n</ol>\n<h2 id=\"specifying-a-components-css-selector\" translation-result=\"on\">指定组件的 CSS 选择器<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#specifying-a-components-css-selector\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"specifying-a-components-css-selector\">Specifying a component's CSS selector<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#specifying-a-components-css-selector\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">每个组件都需要一个 CSS <em>选择器</em>。选择器会告诉 Angular：当在模板 HTML 中找到相应的标签时，就把该组件实例化在那里。例如，考虑一个组件 <code>hello-world.component.ts</code> ，它的选择器定义为 <code>app-hello-world</code> 。 当 <code>&#x3C;app-hello-world></code> 出现在模板中时，这个选择器就会让 Angular 实例化该组件。</p><p translation-origin=\"off\">Every component requires a CSS <em>selector</em>. A selector instructs Angular to instantiate this component wherever it finds the corresponding tag in template HTML. For example, consider a component <code>hello-world.component.ts</code> that defines its selector as <code>app-hello-world</code>. This selector instructs Angular to instantiate this component any time the tag <code>&#x3C;app-hello-world></code> appears in a template.</p>\n\n<p translation-result=\"on\">在 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 装饰器中添加一个 <code>selector</code> 语句来指定组件的选择器。</p><p translation-origin=\"off\">Specify a component's selector by adding a <code>selector</code> statement to the <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> decorator.</p>\n\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"selector\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n})\n\n</code-example>\n<h2 id=\"defining-a-components-template\" translation-result=\"on\">定义一个组件的模板<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#defining-a-components-template\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"defining-a-components-template\">Defining a component's template<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#defining-a-components-template\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">模板是一段 HTML，它告诉 Angular 如何在应用中渲染组件。你可以通过以下两种方式之一为组件定义模板：引用外部文件，或直接写在组件内部。</p><p translation-origin=\"off\">A template is a block of HTML that tells Angular how to render the component in your application.\nYou can define a template for your component in one of two ways: by referencing an external file, or directly within the component.</p>\n\n<p translation-result=\"on\">要把模板定义为外部文件，就要把 <code>templateUrl</code> 添加到 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 装饰器中。</p><p translation-origin=\"off\">To define a template as an external file, add a <code>templateUrl</code> property to the <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> decorator.</p>\n\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"templateUrl\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  templateUrl: './component-overview.component.html',\n})\n\n</code-example>\n<p translation-result=\"on\">要在组件中定义模板，就要把一个 <code>template</code> 属性添加到 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 中，该属性的内容是要使用的 HTML。</p><p translation-origin=\"off\">To define a template within the component, add a <code>template</code> property to the <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> decorator that contains the HTML you want to use.</p>\n\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.1.ts\" region=\"template\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  template: '&#x3C;h1>Hello World!&#x3C;/h1>',\n})\n\n</code-example>\n<p translation-result=\"on\">如果你想让你的模板跨越多行，你可以使用反引号（ <code>`</code> ）。例如：</p><p translation-origin=\"off\">If you want your template to span multiple lines, you can use backticks (<code> ` </code>).\nFor example:</p>\n\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.2.ts\" region=\"templatebacktick\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  template: `&#x3C;h1>Hello World!&#x3C;/h1>\n             &#x3C;p>This template definition spans\n              <a href=\"api/forms/SelectMultipleControlValueAccessor\" class=\"code-anchor\">multiple</a> lines.&#x3C;/p>`\n})\n\n</code-example>\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">Angular 组件需要一个用 <code>template</code> 或 <code>templateUrl</code> 定义的模板。但你不能在组件中同时拥有这两个语句。</p><p translation-origin=\"off\">An Angular component requires a template defined using <code>template</code> or <code>templateUrl</code>. You cannot have both statements in a component.</p>\n\n</div>\n<h2 id=\"declaring-a-components-styles\" translation-result=\"on\">声明组件的样式<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#declaring-a-components-styles\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"declaring-a-components-styles\">Declaring a component's styles<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#declaring-a-components-styles\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">你有以下两种方式来为组件的模板声明样式：引用一个外部文件，或直接写在组件内部。</p><p translation-origin=\"off\">You can declare component styles uses for its template in one of two ways: by referencing an external file, or directly within the component.</p>\n\n<p translation-result=\"on\">要在单独的文件中声明组件的样式，就要把 <code>styleUrls</code> 属性添加到 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> 装饰器中。</p><p translation-origin=\"off\">To declare the styles for a component in a separate file, add a <code>styleUrls</code> property to the <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> decorator.</p>\n\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.ts\" region=\"decorator\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  templateUrl: './component-overview.component.html',\n  styleUrls: ['./component-overview.component.css']\n})\n\n</code-example>\n<p translation-result=\"on\">要想在组件内部声明样式，就要把 <code>styles</code> 属性添加到 <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code>，该属性的内容是你要用的样式。</p><p translation-origin=\"off\">To declare the styles within the component, add a <code>styles</code> property to the <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> decorator that contains the styles you want to use.</p>\n\n<code-example path=\"component-overview/src/app/component-overview/component-overview.component.3.ts\" region=\"styles\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-component-overview',\n  template: '&#x3C;h1>Hello World!&#x3C;/h1>',\n  styles: ['h1 { font-weight: normal; }']\n})\n\n</code-example>\n<p translation-result=\"on\"><code>styles</code> 属性接受一个包含 CSS 规则的字符串数组。</p><p translation-origin=\"off\">The <code>styles</code> property takes an array of strings that contain the CSS rule declarations.</p>\n\n<h2 id=\"next-steps\" translation-result=\"on\">下一步<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#next-steps\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"next-steps\">Next steps<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/component-overview#next-steps\"><i class=\"material-icons\">link</i></a></h2>\n\n<ul>\n<li>\n<p translation-result=\"on\">关于组件的体系结构概述，请参阅<a href=\"guide/architecture-components\">组件和模板简介</a>。</p><p translation-origin=\"off\">For an architectural overview of components, see <a href=\"guide/architecture-components\">Introduction to components and templates</a>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">关于创建组件时可以使用的其他选项，请参阅“API 参考手册”中的<a href=\"api/core/Component\">“组件”</a>。</p><p translation-origin=\"off\">For additional options you can use when creating a component, see <a href=\"api/core/Component\">Component</a> in the API Reference.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">要了解关于为组件指定样式的更多信息，请参阅<a href=\"guide/component-styles\">组件样式</a>。</p><p translation-origin=\"off\">For more information on styling components, see <a href=\"guide/component-styles\">Component styles</a>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">关于模板的详细信息，请参阅<a href=\"guide/template-syntax\">模板语法</a>。</p><p translation-origin=\"off\">For more information on templates, see <a href=\"guide/template-syntax\">Template syntax</a>.</p>\n\n</li>\n</ul>\n\n  <div class=\"reviewed\">最后复查时间： 3/18/2021</div>\n</div>\n\n\n<!-- links to this doc:\n - errors/NG0300\n - guide/built-in-directives\n - guide/content-projection\n - guide/what-is-angular\n - start/start-deployment\n-->\n<!-- links from this doc:\n - api/core/Component\n - api/forms/SelectMultipleControlValueAccessor\n - cli/generate#component-command\n - guide/architecture-components\n - guide/component-overview#angular-components-overview\n - guide/component-overview#creating-a-component\n - guide/component-overview#creating-a-component-manually\n - guide/component-overview#creating-a-component-using-the-angular-cli\n - guide/component-overview#declaring-a-components-styles\n - guide/component-overview#defining-a-components-template\n - guide/component-overview#next-steps\n - guide/component-overview#prerequisites\n - guide/component-overview#specifying-a-components-css-selector\n - guide/component-styles\n - guide/setup-local#create-a-workspace-and-initial-application\n - guide/setup-local#install-the-angular-cli\n - guide/template-syntax\n - https://github.com/angular/angular-cn/edit/aio/aio/content/guide/component-overview.md?message=docs%3A%20请简述你的修改...\n-->"}