{
  "id": "guide/event-binding",
  "title": "Event binding",
  "contents": "\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/aio/aio/content/guide/event-binding.md?message=docs%3A%20请简述你的修改...\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"event-binding\" translation-result=\"on\">事件绑定<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/event-binding#event-binding\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\" id=\"event-binding\">Event binding<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/event-binding#event-binding\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">通过事件绑定，你可以侦听并响应用户操作，例如按键、鼠标移动、点击和触摸。</p><p translation-origin=\"off\">Event binding allows you to listen for and respond to user actions such as keystrokes, mouse movements, clicks, and touches.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">包含本指南中的代码段的工作示例，参见<live-example></live-example>。</p><p translation-origin=\"off\">See the <live-example></live-example> for a working example containing the code snippets in this guide.</p>\n\n</div>\n<h2 id=\"binding-to-events\" translation-result=\"on\">绑定到事件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/event-binding#binding-to-events\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"binding-to-events\">Binding to events<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/event-binding#binding-to-events\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">要绑定到事件，请使用 Angular 的事件绑定语法。此语法由等号左侧括号内的目标事件名和右侧引号内的模板语句组成。在下面的示例中，目标事件名是 <code>click</code> ，模板语句是 <code>onSave()</code> 。</p><p translation-origin=\"off\">To bind to an event you use the Angular event binding syntax.\nThis syntax consists of a target event name within parentheses to the left of an equal sign, and a quoted template statement to the right.\nIn the following example, the target event name is <code>click</code> and the template statement is <code>onSave()</code>.</p>\n\n<code-example language=\"html\" header=\"Event binding syntax\">\n&#x3C;button (click)=\"onSave()\">Save&#x3C;/button>\n</code-example>\n<p translation-result=\"on\">事件绑定侦听按钮的单击事件，并在发生单击时调用组件的 <code>onSave()</code>。</p><p translation-origin=\"off\">The event binding listens for the button's click events and calls the component's <code>onSave()</code> method whenever a click occurs.</p>\n\n<div class=\"lightbox\">\n  <img src=\"generated/images/guide/template-syntax/syntax-diagram.svg\" alt=\"Syntax diagram\" width=\"600\" height=\"125\">\n</div>\n<h2 id=\"custom-events-with-eventemitter\" translation-result=\"on\">使用 <code><a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a></code> 自定义事件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/event-binding#custom-events-with-eventemitter\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"custom-events-with-eventemitter\">Custom events with <code><a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a></code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/event-binding#custom-events-with-eventemitter\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\"><a href=\"guide/built-in-directives\">指令</a>通常使用 Angular 的 <a href=\"api/core/EventEmitter\">EventEmitter</a> 引发自定义事件，如下所示。</p><p translation-origin=\"off\"><a href=\"guide/built-in-directives\">Directives</a> typically raise custom events with an Angular <a href=\"api/core/EventEmitter\">EventEmitter</a> as follows.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">该指令创建一个 <code><a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a></code> 并将其对外暴露为属性。</p><p translation-origin=\"off\">The directive creates an <code><a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a></code> and exposes it as a property.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">然后，该指令调用 <code>EventEmitter.emit(data)</code> 发出事件，传入消息数据，该消息数据可以是任何东西。</p><p translation-origin=\"off\">The directive then calls <code>EventEmitter.emit(data)</code> to emit an event, passing in message data, which can be anything.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">父指令通过绑定到该属性来监听事件，并通过传入的 <code>$event</code> 对象接收数据。</p><p translation-origin=\"off\">Parent directives listen for the event by binding to this property and accessing the data through the <code>$event</code> object.</p>\n\n</li>\n</ol>\n<p translation-result=\"on\">考虑一个 <code>ItemDetailComponent</code> ，它会显示条目信息并响应用户操作。尽管 <code>ItemDetailComponent</code> 显示了一个删除按钮，但它并不包含删除英雄的功能。它只会引发一个报告用户要求删除的事件。</p><p translation-origin=\"off\">Consider an <code>ItemDetailComponent</code> that presents item information and responds to user actions.\nAlthough the <code>ItemDetailComponent</code> has a delete button, it doesn't contain the functionality to delete the hero.\nIt can only raise an event reporting the user's delete request.</p>\n\n<code-example path=\"event-binding/src/app/item-detail/item-detail.component.html\" header=\"src/app/item-detail/item-detail.component.html (template)\" region=\"line-through\">\n&#x3C;img src=\"{{itemImageUrl}}\" [style.display]=\"displayNone\">\n&#x3C;span [style.text-decoration]=\"lineThrough\">{{ item.name }}\n&#x3C;/span>\n&#x3C;button (click)=\"delete()\">Delete&#x3C;/button>\n\n</code-example>\n<p translation-result=\"on\">该组件定义了一个 <code>deleteRequest</code> 返回 <code><a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a></code> 的属性。当用户单击 <strong>Delete</strong> 时，该组件将调用 <code>delete()</code> 方法，让这个 <code><a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a></code> 发出 <code>Item</code> 对象。</p><p translation-origin=\"off\">The component defines a <code>deleteRequest</code> property that returns an <code><a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a></code>.\nWhen the user clicks <strong>Delete</strong>, the component invokes the <code>delete()</code> method, telling the <code><a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a></code> to emit an <code>Item</code> object.</p>\n\n<code-example path=\"event-binding/src/app/item-detail/item-detail.component.ts\" header=\"src/app/item-detail/item-detail.component.ts (deleteRequest)\" region=\"deleteRequest\">\n// This component makes a request but it can't actually delete a hero.\n@<a href=\"api/core/Output\" class=\"code-anchor\">Output</a>() deleteRequest = new <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>&#x3C;Item>();\n\ndelete() {\n  this.deleteRequest.emit(this.item);\n  this.displayNone = this.displayNone ? '' : 'none';\n  this.lineThrough = this.lineThrough ? '' : 'line-through';\n}\n\n</code-example>\n<p translation-result=\"on\">宿主父组件将绑定到 <code>ItemDetailComponent</code> 的 <code>deleteRequest</code> 事件，如下所示。</p><p translation-origin=\"off\">The hosting parent component binds to the <code>deleteRequest</code> event of the <code>ItemDetailComponent</code> as follows.</p>\n\n<code-example path=\"event-binding/src/app/app.component.html\" header=\"src/app/app.component.html (event-binding-to-component)\" region=\"event-binding-to-component\">\n&#x3C;app-item-detail (deleteRequest)=\"deleteItem($event)\" [item]=\"currentItem\">&#x3C;/app-item-detail>\n\n</code-example>\n<p translation-result=\"on\">当 <code>deleteRequest</code> 事件触发时，Angular 就会以该条目为参数调用其父组件的 <code>deleteItem()</code>。</p><p translation-origin=\"off\">When the <code>deleteRequest</code> event fires, Angular calls the parent component's <code>deleteItem()</code> method with the item.</p>\n\n<h3 id=\"determining-an-event-target\" translation-result=\"on\">确定事件目标（target）<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/event-binding#determining-an-event-target\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"determining-an-event-target\">Determining an event target<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/event-binding#determining-an-event-target\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">为了确定事件的目标，Angular 会检查目标事件的名称是否与已知指令的事件属性匹配。在以下示例中，Angular 会检查 <code>myClick</code> 是否来自自定义指令 <code>ClickDirective</code> 的事件。</p><p translation-origin=\"off\">To determine an event target, Angular checks if the name of the target event matches an event property of a known directive.\nIn the following example, Angular checks to see if <code>myClick</code> is an event on the custom <code>ClickDirective</code>.</p>\n\n<code-example path=\"event-binding/src/app/app.component.html\" region=\"custom-directive\" header=\"src/app/app.component.html\">\n&#x3C;h4>myClick is an event on the custom ClickDirective:&#x3C;/h4>\n&#x3C;button (myClick)=\"clickMessage=$event\" clickable>click with myClick&#x3C;/button>\n{{clickMessage}}\n\n</code-example>\n<p translation-result=\"on\">如果目标事件名称 <code>myClick</code> 未能匹配元素上的事件或 <code>ClickDirective</code> 的输出属性，则 Angular 将报告“未知指令”错误。</p><p translation-origin=\"off\">If the target event name, <code>myClick</code> fails to match an element event or an output property of <code>ClickDirective</code>, Angular reports an \"unknown directive\" error.</p>\n\n<h2 id=\"whats-next\" translation-result=\"on\">下一步是什么<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/event-binding#whats-next\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"whats-next\">What's next<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/event-binding#whats-next\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">关于事件绑定工作原理的更多信息，请参阅<a href=\"guide/event-binding-concepts\">事件绑定工作原理</a>。</p><p translation-origin=\"off\">For more information on how event binding works, see <a href=\"guide/event-binding-concepts\">How event binding works</a>.</p>\n\n\n  \n</div>\n\n\n<!-- links to this doc:\n - guide/ajs-quick-reference\n - guide/built-in-directives\n - guide/example-apps-list\n - guide/glossary\n - guide/inputs-outputs\n - guide/observables-in-angular\n - guide/property-binding\n - guide/template-syntax\n - guide/two-way-binding\n - guide/user-input\n - tutorial/toh-pt2\n - tutorial/toh-pt4\n-->\n<!-- links from this doc:\n - api/core/EventEmitter\n - api/core/Output\n - guide/built-in-directives\n - guide/event-binding#binding-to-events\n - guide/event-binding#custom-events-with-eventemitter\n - guide/event-binding#determining-an-event-target\n - guide/event-binding#event-binding\n - guide/event-binding#whats-next\n - guide/event-binding-concepts\n - https://github.com/angular/angular-cn/edit/aio/aio/content/guide/event-binding.md?message=docs%3A%20请简述你的修改...\n-->"
}