{
  "id": "start/start-routing",
  "title": "Adding navigation",
  "contents": "\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/aio/aio/content/start/start-routing.md?message=docs%3A%20请简述你的修改...\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"adding-navigation\" translation-result=\"on\">添加导航<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-routing#adding-navigation\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\" id=\"adding-navigation\">Adding navigation<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-routing#adding-navigation\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">本指南基于入门教程的第一步：<a href=\"start\" title=\"开始使用基本的 Angular 应用\">基本 Angular 应用入门</a>。</p><p translation-origin=\"off\">This guide builds on the first step of the Getting Started tutorial, <a href=\"start\" title=\"Get started with a basic Angular app\">Get started with a basic Angular app</a>.</p>\n\n<p translation-result=\"on\">在此阶段，本在线商店应用会拥有基本的产品目录。</p><p translation-origin=\"off\">At this stage of development, the online store application has a basic product catalog.</p>\n\n<p translation-result=\"on\">在以下各节中，你将向应用添加以下功能：</p><p translation-origin=\"off\">In the following sections, you'll add the following features to the application:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">在地址栏中键入 URL 以导航到相应的产品页面。</p><p translation-origin=\"off\">Type a URL in the address bar to navigate to a corresponding product page.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">单击页面上的链接以在单页应用中导航。</p><p translation-origin=\"off\">Click links on the page to navigate within your single-page application.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">单击浏览器的后退和前进按钮以直观地在浏览器的历史记录中浏览。</p><p translation-origin=\"off\">Click the browser's back and forward buttons to navigate the browser history intuitively.</p>\n\n</li>\n</ul>\n<a id=\"define-routes\"></a>\n<h2 id=\"associate-a-url-path-with-a-component\" translation-result=\"on\">关联 URL 路径与组件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-routing#associate-a-url-path-with-a-component\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"associate-a-url-path-with-a-component\">Associate a URL path with a component<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-routing#associate-a-url-path-with-a-component\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">本应用已经用 Angular <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 导航到了 <code>ProductListComponent</code>。本节将介绍如何定义显示单个产品详情的路由。</p><p translation-origin=\"off\">The application already uses the Angular <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> to navigate to the <code>ProductListComponent</code>.\nThis section shows you how to define a route to show individual product details.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">生成用于展示产品详情的新组件。在文件列表中，右键单击 <code>app</code> 文件夹，选择 <code>Angular Generator</code> 和 <code><a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code>。将组件命名为 <code>product-details</code> 。</p><p translation-origin=\"off\">Generate a new component for product details.\nIn the file list, right-click the <code>app</code> folder, choose <code>Angular Generator</code> and <code><a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code>.\nName the component <code>product-details</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">在 <code>app.module.ts</code> 中，添加产品详情的路由，其 <code>path</code> 为 <code>products/:productId</code>，其 <code>component</code> 为 <code>ProductDetailsComponent</code>。</p><p translation-origin=\"off\">In <code>app.module.ts</code>, add a route for product details, with a <code>path</code> of <code>products/:productId</code> and <code>ProductDetailsComponent</code> for the <code>component</code>.</p>\n\n <code-example header=\"src/app/app.module.ts\" path=\"getting-started/src/app/app.module.ts\" region=\"product-details-route\">\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  imports: [\n    <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>,\n    <a href=\"api/forms/ReactiveFormsModule\" class=\"code-anchor\">ReactiveFormsModule</a>,\n    RouterModule.forRoot([\n      { path: '', component: ProductListComponent },\n      { path: 'products/:productId', component: ProductDetailsComponent },\n    ])\n  ],\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">打开 <code>product-list.component.html</code>。</p><p translation-origin=\"off\">Open <code>product-list.component.html</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">修改产品名称上的链接，使其包括以 <code>product.id</code> 为参数的 <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a></code>。</p><p translation-origin=\"off\">Modify the product name anchor to include a <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a></code> with the <code>product.id</code> as a parameter.</p>\n\n <code-example header=\"src/app/product-list/product-list.component.html\" path=\"getting-started/src/app/product-list/product-list.component.html\" region=\"router-link\">\n&#x3C;div *<a href=\"api/common/NgForOf\" class=\"code-anchor\">ngFor</a>=\"let product of products\">\n\n  &#x3C;h3>\n    &#x3C;a [title]=\"product.name + ' details'\" [<a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>]=\"['/products', product.id]\">\n      {{ product.name }}\n    &#x3C;/a>\n  &#x3C;/h3>\n\n&#x3C;!-- . . . -->\n\n&#x3C;/div>\n\n</code-example>\n<p translation-result=\"on\"><code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code> 指令可帮助你自定义 a 元素。在这里，路由或 URL 中包含一个固定的区段 <code>/products</code>。最后一段则是变量，插入当前产品的 <code>id</code>。\n例如，<code>id</code> 为 1 的产品的 URL 是 <code>https://getting-started-myfork.stackblitz.io/products/1</code>。</p><p translation-origin=\"off\"> The <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code> directive helps you customize the anchor element.\nIn this case, the route, or URL, contains one fixed segment, <code>/products</code>.\nThe final segment is variable, inserting the <code>id</code> property of the current product.\nFor example, the URL for a product with an <code>id</code> of 1 would be similar to <code>https://getting-started-myfork.stackblitz.io/products/1</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">通过单击产品名称，验证路由器是否如预期般工作。应用中应该显示 <code>ProductDetailsComponent</code> 组件，其显示的内容为 “product-details works!”。</p><p translation-origin=\"off\">Verify that the router works as intended by clicking the product name.\nThe application should display the <code>ProductDetailsComponent</code>, which currently says \"product-details works!\"</p>\n\n<p translation-result=\"on\">请注意，预览窗口中的 URL 发生了变化。最后一个部分是 <code>products/#</code>，其中 <code>#</code> 表示你单击的路由的编号。</p><p translation-origin=\"off\">Notice that the URL in the preview window changes.\nThe final segment is <code>products/#</code>  where <code>#</code> is the number of the route you clicked.</p>\n\n<div class=\"lightbox\">\n  <img src=\"generated/images/guide/start/product-details-works.png\" alt=\"Product details view with updated URL\" width=\"259\" height=\"162\">\n</div>\n</li>\n</ol>\n<h2 id=\"view-product-details\" translation-result=\"on\">查看产品详情<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-routing#view-product-details\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"view-product-details\">View product details<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-routing#view-product-details\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\"><code>ProductDetailsComponent</code> 会处理每个产品的显示工作。Angular 路由器会根据浏览器的 URL 和<a href=\"start/start-routing#define-routes\">你定义的路径</a>来显示组件。</p><p translation-origin=\"off\">The <code>ProductDetailsComponent</code> handles the display of each product.\nThe Angular Router displays components based on the browser's URL and <a href=\"start/start-routing#define-routes\">your defined routes</a>.</p>\n\n<p translation-result=\"on\">在本节中，你将使用 Angular 路由器来组合 <code>products</code> 数据和路由信息以显示每个产品的特定详情。</p><p translation-origin=\"off\">In this section, you'll use the Angular Router to combine the <code>products</code> data and route information to display the specific details for each product.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">在 <code>product-details.component.ts</code> 中，从 <code>@angular/router</code> 导入 <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code>，并从 <code>../products</code> 导入 <code>products</code> 数组。</p><p translation-origin=\"off\">In <code>product-details.component.ts</code>, import <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> from <code>@angular/router</code>, and the <code>products</code> array from <code>../products</code>.</p>\n\n <code-example header=\"src/app/product-details/product-details.component.ts\" path=\"getting-started/src/app/product-details/product-details.component.1.ts\" region=\"imports\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a>, <a href=\"api/core/OnInit\" class=\"code-anchor\">OnInit</a> } from '@angular/core';\nimport { <a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a> } from '@angular/router';\n\nimport { products } from '../products';\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">定义 <code>product</code> 属性。</p><p translation-origin=\"off\">Define the <code>product</code> property.</p>\n\n <code-example header=\"src/app/product-details/product-details.component.ts\" path=\"getting-started/src/app/product-details/product-details.component.1.ts\" region=\"product-prop\">\nexport class ProductDetailsComponent implements <a href=\"api/core/OnInit\" class=\"code-anchor\">OnInit</a> {\n  product;\n  /* ... */\n}\n\n\n</code-example>\n</li>\n<li>\n<p translation-result=\"on\">通过把 <code>private route: <a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> 添加为构造函数括号内的参数，来把 <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> 注入到 <code>constructor()</code> 中。</p><p translation-origin=\"off\">Inject <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> into the <code>constructor()</code> by adding <code>private route: <a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> as an argument within the constructor's parentheses.</p>\n\n <code-example header=\"src/app/product-details/product-details.component.ts\" path=\"getting-started/src/app/product-details/product-details.component.1.ts\" region=\"props-methods\">\nexport class ProductDetailsComponent implements <a href=\"api/core/OnInit\" class=\"code-anchor\">OnInit</a> {\n  product;\n\n  constructor(\n    private route: <a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a>,\n  ) { }\n\n}\n\n\n</code-example>\n<p translation-result=\"on\"> Angular 路由器加载的每个组件都有自己专属的 <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code>。<code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> 中包含有关路由和路由参数的信息。</p><p translation-origin=\"off\"> <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> is specific to each component that the Angular Router loads.\n<code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code> contains information about the route and the route's parameters.</p>\n\n<p translation-result=\"on\"> 通过注入 <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code>，你可以配置此组件以使用服务。 <a href=\"start/start-data\" title=\"尝试一下：管理数据\">管理数据</a>那一步将更详细地介绍服务。</p><p translation-origin=\"off\"> By injecting <code><a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a></code>, you are configuring the component to use a service.\nThe <a href=\"start/start-data\" title=\"Try it: Managing Data\">Managing Data</a> step covers services in more detail.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">在 <code>ngOnInit()</code> 方法中，从路由参数中提取 <code>productId</code>，并在 <code>products</code> 数组中找到相应的产品。</p><p translation-origin=\"off\">In the <code>ngOnInit()</code> method, extract the <code>productId</code> from the route parameters and find the corresponding product in the <code>products</code> array.</p>\n\n <code-example path=\"getting-started/src/app/product-details/product-details.component.1.ts\" header=\"src/app/product-details/product-details.component.ts\" region=\"get-product\">\nngOnInit() {\n  // First get the product id from the current route.\n  const routeParams = this.route.snapshot.paramMap;\n  const productIdFromRoute = Number(routeParams.get('productId'));\n\n  // Find the product that correspond with the id provided in route.\n  this.product = products.find(product => product.id === productIdFromRoute);\n}\n\n</code-example>\n<p translation-result=\"on\"> 路由参数与你在此路由中定义的路径变量相对应。要访问路由参数，我们使用 <code>route.snapshot</code> ，它是一个 <code><a href=\"api/router/ActivatedRouteSnapshot\" class=\"code-anchor\">ActivatedRouteSnapshot</a></code>，其中包含有关该特定时刻的活动路由信息。与此路由匹配的 URL 提供了 <code>productId</code>。Angular 会使用 <code>productId</code> 来显示每个唯一产品的详情。</p><p translation-origin=\"off\"> The route parameters correspond to the path variables you define in the route.\nTo access the route parameters, we use <code>route.snapshot</code>, which is the <code><a href=\"api/router/ActivatedRouteSnapshot\" class=\"code-anchor\">ActivatedRouteSnapshot</a></code> that contains information about the active route at that particular moment in time.\nThe URL that matches the route provides the <code>productId</code> .\nAngular uses the <code>productId</code> to display the details for each unique product.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">更新 <code>ProductDetailsComponent</code> 的模板以显示带有 <code>*<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> 的产品详情。如果产品存在，则此 <code>&#x3C;div></code> 会显示名称、价格和说明。</p><p translation-origin=\"off\">Update the <code>ProductDetailsComponent</code> template to display product details with an <code>*<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code>.\nIf a product exists, the <code>&#x3C;div></code> renders with a name, price, and description.</p>\n\n <code-example header=\"src/app/product-details/product-details.component.html\" path=\"getting-started/src/app/product-details/product-details.component.html\" region=\"details\">\n&#x3C;h2>Product Details&#x3C;/h2>\n\n&#x3C;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"product\">\n  &#x3C;h3>{{ product.name }}&#x3C;/h3>\n  &#x3C;h4>{{ product.price | <a href=\"api/common/CurrencyPipe\" class=\"code-anchor\">currency</a> }}&#x3C;/h4>\n  &#x3C;p>{{ product.description }}&#x3C;/p>\n\n&#x3C;/div>\n\n\n</code-example>\n<p translation-result=\"on\"> <code>&#x3C;h4>{{ product.price | <a href=\"api/common/CurrencyPipe\" class=\"code-anchor\">currency</a> }}&#x3C;/h4></code> 这一行，使用 <code><a href=\"api/common/CurrencyPipe\" class=\"code-anchor\">currency</a></code> 管道将 <code>product.price</code> 从数字转换为货币字符串。管道是一种可以在 HTML 模板中转换数据的方式。有关 Angular 管道的更多信息，请参见<a href=\"guide/pipes\" title=\"管道\">管道</a> 。</p><p translation-origin=\"off\"> The line, <code>&#x3C;h4>{{ product.price | <a href=\"api/common/CurrencyPipe\" class=\"code-anchor\">currency</a> }}&#x3C;/h4></code>, uses the <code><a href=\"api/common/CurrencyPipe\" class=\"code-anchor\">currency</a></code> pipe to transform <code>product.price</code> from a number to a currency string.\nA pipe is a way you can transform data in your HTML template.\nFor more information about Angular pipes, see <a href=\"guide/pipes\" title=\"Pipes\">Pipes</a>.</p>\n\n</li>\n</ol>\n<p translation-result=\"on\">当用户单击产品列表中的名称时，路由器会将其导航到产品的不同 URL，显示此 <code>ProductDetailsComponent</code>，并展示产品详情。</p><p translation-origin=\"off\">When users click on a name in the product list, the router navigates them to the distinct URL for the product, shows the <code>ProductDetailsComponent</code>, and displays the product details.</p>\n\n<div class=\"lightbox\">\n  <img src=\"generated/images/guide/start/product-details-routed.png\" alt=\"Product details page with updated URL and full details displayed\" width=\"259\" height=\"225\">\n</div>\n<p translation-result=\"on\">有关 Angular 路由器的更多信息，请参见<a href=\"guide/router\" title=\"路由与导航指南\">路由与导航</a> 。</p><p translation-origin=\"off\">For more information about the Angular Router, see <a href=\"guide/router\" title=\"Routing &#x26; Navigation guide\">Routing &#x26; Navigation</a>.</p>\n\n<h2 id=\"whats-next\" translation-result=\"on\">下一步是什么<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-routing#whats-next\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"whats-next\">What's next<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"start/start-routing#whats-next\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">你已经配置好了应用，以便查看产品详情，每个产品详情都有一个不同的 URL。</p><p translation-origin=\"off\">You have configured your application so you can view product details, each with a distinct URL.</p>\n\n<p translation-result=\"on\">继续探索 Angular：</p><p translation-origin=\"off\">To continue exploring Angular:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">继续<a href=\"start/start-data\" title=\"尝试一下：管理数据\">管理数据</a>以添加购物车功能、管理购物车数据并检索外部数据以获取运费。</p><p translation-origin=\"off\">Continue to <a href=\"start/start-data\" title=\"Try it: Managing Data\">Managing Data</a> to add a shopping cart feature, manage cart data, and retrieve external data for shipping prices.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">跳至<a href=\"start/start-deployment\" title=\"试试看：部署\">部署</a>以将你的应用部署到 Firebase 或转为本地开发。</p><p translation-origin=\"off\">Skip ahead to <a href=\"start/start-deployment\" title=\"Try it: Deployment\">Deployment</a> to deploy your application to Firebase or move to local development.</p>\n\n</li>\n</ul>\n\n  \n</div>\n\n\n<!-- links to this doc:\n - start\n - start/start-data\n-->\n<!-- links from this doc:\n - api/common/CurrencyPipe\n - api/common/NgForOf\n - api/common/NgIf\n - api/core/Component\n - api/core/NgModule\n - api/core/OnInit\n - api/forms/ReactiveFormsModule\n - api/platform-browser/BrowserModule\n - api/router/ActivatedRoute\n - api/router/ActivatedRouteSnapshot\n - api/router/Router\n - api/router/RouterLink\n - guide/pipes\n - guide/router\n - start\n - start/start-data\n - start/start-deployment\n - start/start-routing#adding-navigation\n - start/start-routing#associate-a-url-path-with-a-component\n - start/start-routing#define-routes\n - start/start-routing#view-product-details\n - start/start-routing#whats-next\n - https://github.com/angular/angular-cn/edit/aio/aio/content/start/start-routing.md?message=docs%3A%20请简述你的修改...\n-->"
}